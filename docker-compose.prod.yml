---
services:
    app:
        image: ghcr.io/boodschrappen/boodschrappen:latest
        restart: unless-stopped
        networks:
            - internal
        ports:
            - 80:80 # Remove this if you have a reverse proxy like Nginx or Traefik in front of it.
        volumes:
            - app-storage:/app/storage/app:rw
        depends_on:
            - redis
            - database
            - meilisearch

    queue:
        image: ghcr.io/boodschrappen/boodschrappen:latest
        environment:
            CONTAINER_ROLE: queue
        restart: unless-stopped
        networks:
            - internal
        volumes:
            - app-storage:/app/storage/app:rw
        depends_on:
            - database
            - meilisearch
        healthcheck:
            test: pgrep -f "queue:listen" > /dev/null || exit 1
            start_period: 5s

    scheduler:
        image: ghcr.io/boodschrappen/boodschrappen:latest
        environment:
            CONTAINER_ROLE: scheduler
        restart: unless-stopped
        networks:
            - internal
        volumes:
            - app-storage:/app/storage/app:rw
        depends_on:
            - database
            - meilisearch
        healthcheck:
            test: pgrep -f "schedule:work" > /dev/null || exit 1
            start_period: 5s

    database:
        image: postgres:17.2
        restart: unless-stopped
        networks:
            - internal
        volumes:
            - postgres-data:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: ${POSTGRES_USER:-postgres}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
            POSTGRES_DB: ${POSTGRES_DB:-boodschrappen}
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:-postgres}"]
            interval: 10s
            timeout: 5s
            retries: 5

    redis:
        image: redis:alpine
        volumes:
            - redis-data:/data
        networks:
            - internal
        restart: always
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s

    meilisearch:
        image: "getmeili/meilisearch:latest"
        environment:
            MEILI_NO_ANALYTICS: "true"
        volumes:
            - meilisearch-data:/data
        networks:
            - internal
        restart: always
        healthcheck:
            test:
                [
                    "CMD",
                    "wget",
                    "--no-verbose",
                    "--spider",
                    "http://127.0.0.1:7700/health",
                ]
            retries: 3
            timeout: 5s

networks:
    internal:

volumes:
    app-storage:
    postgres-data:
    redis-data:
    meilisearch-data:
