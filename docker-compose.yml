---
services:
    app:
        container_name: boodschrappen-app
        build:
            context: .
            dockerfile: .docker/development.Dockerfile
        restart: unless-stopped
        networks:
            - internal
        ports:
            - 8000:8000
        volumes:
            - .:/app:rw
        depends_on:
            - redis
            - database
            - meilisearch

    queue:
        container_name: boodschrappen-queue
        build:
            context: .
            dockerfile: .docker/development.Dockerfile
        command: php artisan queue:listen
        restart: unless-stopped
        networks:
            - internal
        volumes:
            - .:/app:rw
        depends_on:
            - redis
            - database
            - meilisearch
        healthcheck:
            test: pgrep -f "queue:listen" > /dev/null || exit 1
            start_period: 10s

    scheduler:
        container_name: boodschrappen-scheduler
        build:
            context: .
            dockerfile: .docker/development.Dockerfile
        command: php artisan schedule:work
        restart: unless-stopped
        networks:
            - internal
        volumes:
            - .:/app:rw
        depends_on:
            - redis
            - database
            - meilisearch
        healthcheck:
            test: pgrep -f "schedule:work" > /dev/null || exit 1
            start_period: 10s

    database:
        image: postgres:17.2
        container_name: boodschrappen-db
        restart: unless-stopped
        networks:
            - internal
        volumes:
            - postgres-data:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: ${POSTGRES_USER:-postgres}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
            POSTGRES_DB: ${POSTGRES_DB:-boodschrappen}
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:-postgres}"]
            interval: 10s
            timeout: 5s
            retries: 5

    redis:
        image: redis:alpine
        volumes:
            - redis-data:/data
        networks:
            - internal
        restart: always
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s

    meilisearch:
        image: getmeili/meilisearch:latest
        environment:
            MEILI_NO_ANALYTICS: "true"
        volumes:
            - meilisearch-data:/data
        ports:
            - 7700:7700
        networks:
            - internal
        restart: always
        healthcheck:
            test:
                [
                    "CMD",
                    "wget",
                    "--no-verbose",
                    "--spider",
                    "http://127.0.0.1:7700/health",
                ]
            retries: 3
            timeout: 5s

    pdgadmin:
        image: dpage/pgadmin4:latest
        environment:
            - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL:-user@domain.com}
            - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD:-SuperSecret}
        ports:
            - 8001:80
        networks:
            - internal

networks:
    internal:

volumes:
    postgres-data:
    redis-data:
    meilisearch-data:
